"""remove columns from task orders

Revision ID: d73cba9a4259
Revises: d2390c547dca
Create Date: 2019-05-30 13:47:08.684986

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd73cba9a4259'
down_revision = 'd2390c547dca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('task_orders_users_so_id', 'task_orders', type_='foreignkey')
    op.drop_constraint('task_orders_users_ko_id', 'task_orders', type_='foreignkey')
    op.drop_constraint('task_orders_attachments_csp_attachment_id', 'task_orders', type_='foreignkey')
    op.drop_constraint('task_orders_users_cor_id', 'task_orders', type_='foreignkey')
    op.drop_constraint('task_orders_dd_254s_id', 'task_orders', type_='foreignkey')
    op.drop_column('task_orders', 'custom_clauses')
    op.drop_column('task_orders', 'unlimited_level_of_warrant')
    op.drop_column('task_orders', 'complexity_other')
    op.drop_column('task_orders', 'level_of_warrant')
    op.drop_column('task_orders', 'ko_id')
    op.drop_column('task_orders', 'so_first_name')
    op.drop_column('task_orders', 'ko_invite')
    op.drop_column('task_orders', 'team_experience')
    op.drop_column('task_orders', 'so_phone_number')
    op.drop_column('task_orders', 'cor_phone_number')
    op.drop_column('task_orders', 'end_date')
    op.drop_column('task_orders', 'cor_first_name')
    op.drop_column('task_orders', 'app_migration')
    op.drop_column('task_orders', 'performance_length')
    op.drop_column('task_orders', 'ko_last_name')
    op.drop_column('task_orders', 'so_last_name')
    op.drop_column('task_orders', 'cor_dod_id')
    op.drop_column('task_orders', 'scope')
    op.drop_column('task_orders', 'complexity')
    op.drop_column('task_orders', 'dev_team_other')
    op.drop_column('task_orders', 'cor_invite')
    op.drop_column('task_orders', 'ko_first_name')
    op.drop_column('task_orders', 'native_apps')
    op.drop_column('task_orders', 'csp_attachment_id')
    op.drop_column('task_orders', 'clin_02')
    op.drop_column('task_orders', 'cor_id')
    op.drop_column('task_orders', 'so_email')
    op.drop_column('task_orders', 'ko_email')
    op.drop_column('task_orders', 'start_date')
    op.drop_column('task_orders', 'cor_last_name')
    op.drop_column('task_orders', 'ko_phone_number')
    op.drop_column('task_orders', 'so_id')
    op.drop_column('task_orders', 'dev_team')
    op.drop_column('task_orders', 'clin_01')
    op.drop_column('task_orders', 'cor_email')
    op.drop_column('task_orders', 'loas')
    op.drop_column('task_orders', 'so_dod_id')
    op.drop_column('task_orders', 'so_invite')
    op.drop_column('task_orders', 'clin_03')
    op.drop_column('task_orders', 'dd_254_id')
    op.drop_column('task_orders', 'clin_04')
    op.drop_column('task_orders', 'ko_dod_id')
    op.drop_table('dd_254s')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task_orders', sa.Column('ko_dod_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('clin_04', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('dd_254_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('clin_03', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_invite', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_dod_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('loas', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('clin_01', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('dev_team', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('clin_02', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('csp_attachment_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('native_apps', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_invite', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('dev_team_other', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('complexity', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('scope', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_dod_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_last_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('performance_length', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('app_migration', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('cor_phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('team_experience', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_invite', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('so_first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('ko_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('level_of_warrant', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('complexity_other', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('unlimited_level_of_warrant', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task_orders', sa.Column('custom_clauses', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('task_orders_users_cor_id', 'task_orders', 'users', ['cor_id'], ['id'])
    op.create_foreign_key('task_orders_attachments_csp_attachment_id', 'task_orders', 'attachments', ['csp_attachment_id'], ['id'])
    op.create_foreign_key('task_orders_users_ko_id', 'task_orders', 'users', ['ko_id'], ['id'])
    op.create_foreign_key('task_orders_users_so_id', 'task_orders', 'users', ['so_id'], ['id'])
    op.create_table('dd_254s',
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('certifying_official', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certifying_official_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certifying_official_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certifying_official_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('required_distribution', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='dd_254s_pkey')
    )
    op.create_foreign_key('task_orders_dd_254s_id', 'task_orders', 'dd_254s', ['dd_254_id'], ['id'])
    # ### end Alembic commands ###
