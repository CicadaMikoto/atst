version: 2.0

defaults:
  sourceImage: &sourceImage registry.atat.codes:443/atat-app-builder:circleci-cd
  sourceAuth: &sourceAuth
    username: $REGISTRY_USERNAME
    password: $REGISTRY_PASSWORD
  appEnvironment: &appEnvironment
    KEEP_EXISTING_VENV: true
    PGHOST: localhost
    PGUSER: root
    PGDATABASE: circle_test
    REDIS_URI: redis://localhost:6379
  dockerCmdEnvironment: &dockerCmdEnvironment
    APP_USER: atst
    APP_GROUP: atat
    APP_DIR: /opt/atat/atst
    CONTAINER_NAME: atst-container
    REGISTRY_LOCATION: registry.atat.codes:443

jobs:
  app_setup:
    docker:
      - image: *sourceImage
        auth: *sourceAuth
        environment: *appEnvironment
      - image: circleci/postgres:9.6.5-alpine-ram
      - image: circleci/redis:4-alpine3.8
    steps:
      - checkout
      - run:
          name: "Clone Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: .
      - restore_cache:
          name: "Load Cache: Pipenv References"
          keys:
            - pipenv-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pipenv-v1-{{ .Branch }}-
            - pipenv-v1-
      - restore_cache:
          name: "Load Cache: Python Venv"
          keys:
            - venv-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - venv-v1-{{ .Branch }}-
            - venv-v1-
      - restore_cache:
          name: "Load Cache: Yarn"
          keys:
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - yarn-v1-
      - restore_cache:
          name: "Load Cache: Node Modules"
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run: ./script/setup
      - save_cache:
          name: "Save Cache: Pipenv Refrences"
          paths:
            - ~/.local/share
          key: pipenv-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - save_cache:
          name: "Save Cache: Python Venv"
          paths:
            - ./.venv
          key: venv-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - save_cache:
          name: "Save Cache: Yarn"
          paths:
            - ~/.cache/yarn
          key: yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - save_cache:
          name: "Save Cache: Node Modules"
          paths:
            - ./node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: "Load Cache: CRLs"
          keys:
            - disa-crls-v1
            - disa-crls
      - run: 
          name: "Update CRLs"
          command: ./script/sync-crls
      - save_cache:
          name: "Save Cache: CRLs"
          paths:
            - ./crl
          key: disa-crls-v1-{{ .Branch }}-{{ epoch}}
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker:
      - image: *sourceImage
        auth: *sourceAuth
        environment: *appEnvironment
      - image: circleci/postgres:9.6.5-alpine-ram
      - image: circleci/redis:4-alpine3.8
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: "Run Tests"
          command: ./script/cibuild

  build_and_push_image:
    docker:
      - image: *sourceImage
        auth: *sourceAuth
        environment: *dockerCmdEnvironment
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: "Generate Image Name"
          command: echo 'export IMAGENAME="${REGISTRY_LOCATION}:$(git rev-parse --short HEAD)-circle"' >> $BASH_ENV
      - run:
          name: "Create ATST Container"
          command: |
            docker run -d --entrypoint='/bin/sh' --name ${CONTAINER_NAME} alpine:3.8 top
            docker container exec -t ${CONTAINER_NAME} mkdir ${APP_DIR}
            docker cp . ${CONTAINER_NAME}:${APP_DIR}
            docker container exec -t --workdir ${APP_DIR} ${CONTAINER_NAME} ./script/alpine_setup
            docker container exec -t --workdir ${APP_DIR} ${CONTAINER_NAME} ./script/fix_permissions
            docker commit \
              --change="ENV APP_USER \"${APP_USER}\"" \
              --change="ENV APP_GROUP \"${APP_GROUP}\"" \
              --change="ENV APP_DIR \"${APP_DIR}\"" \
              --change='ENTRYPOINT ["/usr/bin/dumb-init", "--"]' \
              --change="CMD [\"bash\", \"-c\", \"${APP_DIR}/script/uwsgi_server\"]" \
              --change="WORKDIR ${APP_DIR}" \
              --change="USER \"${APP_USER}\"" \
              ${CONTAINER_NAME} \
              ${IMAGE_NAME}
            docker image ls
      - run:
          name: "List Docker Images"
          command: docker image ls
      - run:
          name: "Publish ATST Image"
          command: |
            docker image ls
            docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${REGISTRY_LOCATION}
            docker push ${IMAGE_NAME}
            docker logout

workflows:
  version: 2
  run-tests:
    jobs:
      - app_setup
      - test:
          requires:
            - app_setup
      - build_and_push_image:
          requires:
            - test
          filters:
            branches:
              only: circleci-workflow
